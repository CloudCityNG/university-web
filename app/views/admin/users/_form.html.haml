= error_messages_for(@user)

%h2 Login Info
%p
  = form.label :email
  = form.text_field :email

%p
  = form.label :real_name
  = form.text_field :real_name

%p
  = form.label :nickname
  = form.text_field :nickname

%p
  = form.label :time_zone
  = form.time_zone_select :time_zone, ActiveSupport::TimeZone.all.sort, :include_blank => true, :default => ""

- if form.object.new_record?
  %p.info
    To manually set the users password enter it below.
    // Otherwise leave the fields blank and a password will be generated and emailed to the user.

%p
  = form.label :password, form.object.new_record? ? nil : "Change password"
  = form.password_field :password

%p
  = form.label :password_confirmation
  = form.password_field :password_confirmation

%p
  = form.label :access_level
  = user_access_level_select(form.object)

%hr

%p
  = form.label :github_account_name, "Github Name"
  = form.text_field :github_account_name

%p
  = form.label :twitter_account_name, "Twitter Name"
  = form.text_field :twitter_account_name

%p
  = form.label :project_url
  = form.text_field :project_url

%hr

%p
  = form.label :alumni_number, "Alumni #"
  = form.text_field :alumni_number

%p
  = form.label :alumni_month
  = form.text_field :alumni_month

%p
  = form.label :alumni_year
  = form.text_field :alumni_year

%hr

%h2 Courses

.user_courses
  = link_to_add_association 'Add a course', form, :course_memberships, :"data-association-insertion-position" => "after", :class => "add_nested_fields"

= form.fields_for :course_memberships,
  @user.course_memberships.where(["access_level <> 'instructor'"]).all do |m|
  = render "course_membership_fields", :f => m

%hr

%h2 Chat Channel Memberships
.user_channel_memberships
  = link_to_add_association 'Add a channel', form, :chat_channel_memberships, :"data-association-insertion-position" => "after", :class => "add_nested_fields"

= form.fields_for :chat_channel_memberships do |m|
  = render "chat_channel_membership_fields", :f => m

%hr

%h2 Comments

.user_comments
  = link_to_add_association 'Add a comment', form, :comments, :"data-association-insertion-position" => "after", :class => "add_nested_fields"

= form.fields_for :comments do |c|
  = render "comment_fields", :f => c

#submit_bar
  = form.submit @user.new_record? ? "Create" : "Update"
  = link_to "Cancel", admin_users_path, :class => "cancel"
