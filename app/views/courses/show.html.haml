- title @course.name
      
- content_for :header_bottom do
  :javascript
    
    $(document).ready(function(){
      updateTimes();
      setInterval('updateTimes()', 1000);
    });

    function zeropad(num) {
      return num < 10 ? '0'+num : num;
    }
    
    function formatDate(d) {
      return d.toDateString() + ' ' + zeropad(d.getHours()) + ':' + 
        zeropad(d.getMinutes()) + ":" + zeropad(d.getSeconds());
    }
    
    function updateTimes() {
      var d = new Date();
      var utc_time = d.getTime()+(d.getTimezoneOffset()*60000);
      $('.timezone').each(function(i) {
        var offset = parseInt($(this).attr('data-utc-offset'));
        var zonetime = new Date(utc_time + (offset*1000));
        $(this).children('.time-display').html(formatDate(zonetime));
      });
    }
  
    $(function(){
      $('#edit_notes').click(function(){
        $('#note_content').trigger("edit");
      });

      $('#note_content').click(function(e){
        if (e.target.tagName != "A") {
          $('#note_content').trigger("edit");
        }
      });
      
      var editPath = '#{course_path(@course)}/notes';

      $('#note_content').editable(editPath, {
        type:      'textarea',
        height:    '200px',
        width:     '98%',
        indicator: 'Saving ...',
        cancel:    'Cancel',
        submit:    'Save',
        loadurl:   '#{course_path(@course)}.text',
        tooltip:   'Click to edit...',
        event:     'edit',
        onblur:    'ignore'
      });
      
      SidebarMenu.register('sidebar');
      
      jQuery("label.infield").inFieldLabels();
    });

- content_for :breadcrumbs do
  = render :partial => "breadcrumbs"
  %span.separator &rarr;
  %span#current_section
  
- content_for :bucket do
  #description.bucket
    = md(@course.description)
  
  #assignments.bucket
    - @course.assignments.each do |assignment|
      = link_to course_assignment_path(@course, assignment) do
        .assignment
          %span.name= assignment.name
          %span.description= assignment.short_description
  
  #progress.bucket
    = render :partial => "dashboard/assignments", 
      :locals => {:course => @course, :expanded => true}
  
  #notes.bucket
    .controls
      %input.clean-gray.small#edit_notes{:type => "button", :value => "Edit"}
    #note_content= md(@course.notes)
      
  #documents.bucket
    - @course.documents.each do |document|
      .document
        = link_to course_document_path(@course, document) do
          %span.name= document.title
          %span.description= document.description

  #activity.bucket
    - @activities.each do |activity|
      = render :partial => "activity", 
              :locals => {:activity => activity}
    = will_paginate @activities, :params => {:anchor => "activity"},
      :param_name => "activity_page"
      
  - if @course.channel
    #irc_log.bucket
      = render :partial => "/chat/recent", 
        :locals => { :channel            => @course.channel, 
                     :full_body          => true,
                     :number_of_messages => 20 }
      = link_to "View full logs", 
        chat_messages_path(:channel => @course.channel.name)
    
  #participants.bucket
    #directory
      = form_tag course_path(@course, :anchor => "participants"), :method => :get, 
        :id => "directory_search" do
        = label_tag :search, "Name or Email", 
          :class => "infield"
        = text_field_tag :search, params[:search]
        = submit_tag "Search"
  
      - @users.each do |user|
        = render :partial => '/users/user', :locals => { :user => user, 
          :roles => user.course_memberships.where(:course_id => @course.id)}

      = will_paginate @users, :params => {:anchor => "participants"}, 
        :param_name => "user_page"
    
  #timezones.bucket
    - @timezones.each do |time_zone, users|
      .timezone{ 'data-utc-offset' => ActiveSupport::TimeZone.new(time_zone).utc_offset }
        .time-display
        = time_zone
      - users.each do |user|
        = render :partial => '/users/user', :locals => { :user => user, 
          :roles => user.course_memberships.where(:course_id => @course.id)}
  
= render :partial => "layout"